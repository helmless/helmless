# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json
suite: Network Configuration Tests
templates:
  - manifest.yaml
set:
  name: my-service
  image: gcr.io/my-project/my-app:v1
  project: my-project

tests:
  # VPC Connector Tests
  - it: should set VPC connector when specified
    set:
      network:
        connector: my-connector
    asserts:
      - equal:
          path: spec.template.metadata.annotations["run.googleapis.com/vpc-access-connector"]
          value: my-connector

  - it: should set VPC connector with full resource name
    set:
      network:
        connector: projects/other-project/locations/us-central1/connectors/my-connector
    asserts:
      - equal:
          path: spec.template.metadata.annotations["run.googleapis.com/vpc-access-connector"]
          value: projects/other-project/locations/us-central1/connectors/my-connector

  - it: should set VPC egress with connector
    set:
      network:
        connector: my-connector
        egress: private-ranges-only
    asserts:
      - equal:
          path: spec.template.metadata.annotations["run.googleapis.com/vpc-access-connector"]
          value: my-connector
      - equal:
          path: spec.template.metadata.annotations["run.googleapis.com/vpc-access-egress"]
          value: private-ranges-only

  # Direct VPC Access Tests
  - it: should set direct VPC access when specified
    set:
      network:
        vpc: my-vpc
        subnetwork: my-subnetwork
        tags: ['tag1', 'tag2']
    asserts:
      - equal:
          path: spec.template.metadata.annotations["run.googleapis.com/network-interfaces"]
          value: '[{"network":"my-vpc","subnetwork":"my-subnetwork","tags":["tag1","tag2"]}]'

  - it: should set direct VPC access with empty tags when not specified
    set:
      network:
        vpc: my-vpc
        subnetwork: my-subnetwork
    asserts:
      - equal:
          path: spec.template.metadata.annotations["run.googleapis.com/network-interfaces"]
          value: '[{"network":"my-vpc","subnetwork":"my-subnetwork","tags":[]}]'

  - it: should set cross-project VPC access
    set:
      network:
        vpc: projects/other-project/global/networks/my-vpc
        subnetwork: projects/other-project/regions/us-central1/subnetworks/my-subnet
        tags: ['tag1']
    asserts:
      - equal:
          path: spec.template.metadata.annotations["run.googleapis.com/network-interfaces"]
          value: '[{"network":"projects/other-project/global/networks/my-vpc","subnetwork":"projects/other-project/regions/us-central1/subnetworks/my-subnet","tags":["tag1"]}]'

  # Default Values Tests
  - it: should default to private-ranges-only egress with connector
    set:
      network:
        connector: my-connector
    asserts:
      - equal:
          path: spec.template.metadata.annotations["run.googleapis.com/vpc-access-egress"]
          value: private-ranges-only

  # Validation Tests
  - it: should fail when both connector and direct VPC are specified
    set:
      network:
        connector: my-connector
        vpc: my-vpc
        subnetwork: my-subnetwork
    asserts:
      - failedTemplate: {}

  - it: should fail when vpc specified without subnetwork
    set:
      network:
        vpc: my-vpc
    asserts:
      - failedTemplate: {}

  - it: should fail when subnetwork specified without vpc
    set:
      network:
        subnetwork: my-subnetwork
    asserts:
      - failedTemplate: {}

  - it: should fail when invalid egress type specified
    set:
      network:
        connector: my-connector
        egress: invalid-type
    asserts:
      - failedTemplate: {}

  - it: should fail when vpc name is invalid
    set:
      network:
        vpc: invalid/vpc/name
        subnetwork: my-subnetwork
    asserts:
      - failedTemplate: {}

  - it: should fail when subnetwork name is invalid
    set:
      network:
        vpc: my-vpc
        subnetwork: invalid/subnetwork/name
    asserts:
      - failedTemplate: {}

  # Ingress Tests
  - it: should set ingress to all by default
    asserts:
      - equal:
          path: metadata.annotations["run.googleapis.com/ingress"]
          value: all

  - it: should set ingress to internal
    set:
      ingress: internal
    asserts:
      - equal:
          path: metadata.annotations["run.googleapis.com/ingress"]
          value: internal

  - it: should set ingress to internal-and-cloud-load-balancing
    set:
      ingress: internal-and-cloud-load-balancing
    asserts:
      - equal:
          path: metadata.annotations["run.googleapis.com/ingress"]
          value: internal-and-cloud-load-balancing

  - it: should fail when invalid ingress type specified
    set:
      ingress: invalid-type
    asserts:
      - failedTemplate: {}

  # Session Affinity Tests
  - it: should set session affinity to none by default
    asserts:
      - notExists:
          path: metadata.annotations["run.googleapis.com/session-affinity"]

  - it: should set session affinity to true
    set:
      sessionAffinity: true
    asserts:
      - equal:
          path: spec.template.metadata.annotations["run.googleapis.com/session-affinity"]
          value: 'true'

  - it: should set session affinity to false
    set:
      sessionAffinity: false
    asserts:
      - notExists:
          path: spec.template.metadata.annotations["run.googleapis.com/session-affinity"]
