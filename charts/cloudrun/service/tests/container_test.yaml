# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json
suite: Container Configuration Tests
templates:
  - manifest.yaml
set:
  name: my-service
  image: gcr.io/my-project/my-app:v1
  project: my-project

tests:
  # Image Configuration
  - it: should set image when specified as string
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: gcr.io/my-project/my-app:v1

  - it: should set image when specified as object with registry
    set:
      image:
        registry: gcr.io
        repository: my-project
        name: my-app
        tag: v2
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: gcr.io/my-project/my-app:v2

  - it: should set image when specified as object without registry
    set:
      image:
        repository: my-project
        name: my-app
        tag: v3
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: my-project/my-app:v3

  - it: should set image without tag when not specified
    set:
      image:
        repository: my-project
        name: my-app
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: my-project/my-app

  - it: should fail when image is not specified
    set:
      image: null
    asserts:
      - failedTemplate: {}

  # Container Name
  - it: should not set container name when not specified
    asserts:
      - notExists:
          path: spec.template.spec.containers[0].name

  - it: should set container name when specified
    set:
      containerName: my-container
    asserts:
      - equal:
          path: spec.template.spec.containers[0].name
          value: my-container

  # Command & Args
  - it: should not set command when not specified
    asserts:
      - notExists:
          path: spec.template.spec.containers[0].command

  - it: should set command when specified
    set:
      command: ['echo', 'hello']
    asserts:
      - equal:
          path: spec.template.spec.containers[0].command
          value: ['echo', 'hello']

  - it: should not set args when not specified
    asserts:
      - notExists:
          path: spec.template.spec.containers[0].args

  - it: should set args when specified
    set:
      args: ['--debug', '--verbose']
    asserts:
      - equal:
          path: spec.template.spec.containers[0].args
          value: ['--debug', '--verbose']

  - it: should handle empty command array
    set:
      command: []
    asserts:
      - notExists:
          path: spec.template.spec.containers[0].command

  - it: should handle empty args array
    set:
      args: []
    asserts:
      - notExists:
          path: spec.template.spec.containers[0].args

  # Port Configuration
  - it: should set default container port with http1 when not specified
    asserts:
      - equal:
          path: spec.template.spec.containers[0].ports[0].containerPort
          value: 8080
      - equal:
          path: spec.template.spec.containers[0].ports[0].name
          value: http1

  - it: should set container port with h2c when http2 is enabled
    set:
      http2: true
    asserts:
      - equal:
          path: spec.template.spec.containers[0].ports[0].containerPort
          value: 8080
      - equal:
          path: spec.template.spec.containers[0].ports[0].name
          value: h2c

  - it: should set custom container port with http1 when specified
    set:
      containerPort: 3000
    asserts:
      - equal:
          path: spec.template.spec.containers[0].ports[0].containerPort
          value: 3000
      - equal:
          path: spec.template.spec.containers[0].ports[0].name
          value: http1

  - it: should set custom container port with h2c when specified with http2
    set:
      containerPort: 3000
      http2: true
    asserts:
      - equal:
          path: spec.template.spec.containers[0].ports[0].containerPort
          value: 3000
      - equal:
          path: spec.template.spec.containers[0].ports[0].name
          value: h2c
