suite: Security and Identity Tests
templates:
  - manifest.yaml
set:
  name: my-service
  image: gcr.io/my-project/my-app:v1

tests:
  # Service Account
  - it: should not set service account when not specified
    asserts:
      - notExists:
          path: spec.template.spec.serviceAccountName

  - it: should set service account when specified
    set:
      serviceAccountName: my-sa@project.iam.gserviceaccount.com
    asserts:
      - equal:
          path: spec.template.spec.serviceAccountName
          value: my-sa@project.iam.gserviceaccount.com

  # Binary Authorization (Service-level annotation)
  - it: should not set binary authorization when not specified
    asserts:
      - notExists:
          path: metadata.annotations["run.googleapis.com/binary-authorization"]

  - it: should set binary authorization when enabled
    set:
      binaryAuthorization: true
    asserts:
      - equal:
          path: metadata.annotations["run.googleapis.com/binary-authorization"]
          value: 'true'

  - it: should not set binary authorization when disabled
    set:
      binaryAuthorization: false
    asserts:
      - notExists:
          path: metadata.annotations["run.googleapis.com/binary-authorization"]

  # Encryption Key (Revision-level annotation)
  - it: should not set encryption key when not specified
    asserts:
      - notExists:
          path: spec.template.metadata.annotations["run.googleapis.com/encryption-key"]

  - it: should set encryption key when specified
    set:
      encryptionKey: projects/my-project/locations/global/keyRings/my-keyring/cryptoKeys/my-key
    asserts:
      - equal:
          path: spec.template.metadata.annotations["run.googleapis.com/encryption-key"]
          value: projects/my-project/locations/global/keyRings/my-keyring/cryptoKeys/my-key

  - it: should fail when encryption key format is invalid
    set:
      encryptionKey: invalid-key-format
    asserts:
      - failedTemplate: {}

  # Custom Audiences (Revision-level annotation)
  - it: should not set custom audiences when not specified
    asserts:
      - notExists:
          path: spec.template.metadata.annotations["run.googleapis.com/custom-audiences"]

  - it: should set custom audiences when specified
    set:
      customAudiences: ['https://example.com', 'my-audience']
    asserts:
      - equal:
          path: spec.template.metadata.annotations["run.googleapis.com/custom-audiences"]
          value: '["https://example.com","my-audience"]'

  # Disable Invoker IAM Policy (Service-level annotation)
  - it: should not set disable invoker IAM policy when not specified
    asserts:
      - notExists:
          path: metadata.annotations["run.googleapis.com/invoker-iam-disabled"]

  - it: should set disable invoker IAM policy when true
    set:
      disableInvokerIamPolicy: true
    asserts:
      - equal:
          path: metadata.annotations["run.googleapis.com/invoker-iam-disabled"]
          value: 'true'

  - it: should not set disable invoker IAM policy when false
    set:
      disableInvokerIamPolicy: false
    asserts:
      - notExists:
          path: metadata.annotations["run.googleapis.com/invoker-iam-disabled"]
