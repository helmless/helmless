should render minimal configuration:
  1: |
    template:
      metadata:
        annotations:
          autoscaling.knative.dev/maxScale: "100"
          autoscaling.knative.dev/minScale: "0"
          run.googleapis.com/cpu-throttling: "true"
          run.googleapis.com/execution-environment: gen2
          run.googleapis.com/startup-cpu-boost: "false"
      spec:
        containerConcurrency: 80
        containers:
          - image: gcr.io/project/image
            ports:
              - containerPort: 8080
                name: http1
            resources:
              limits:
                cpu: "1"
                memory: 512Mi
            startupProbe:
              failureThreshold: 3
              initialDelaySeconds: 0
              periodSeconds: 10
              tcpSocket:
                port: 8080
              timeoutSeconds: 1
        timeoutSeconds: 300
should render with basic configuration:
  1: |
    template:
      metadata:
        annotations:
          autoscaling.knative.dev/maxScale: "100"
          autoscaling.knative.dev/minScale: "0"
          run.googleapis.com/cpu-throttling: "true"
          run.googleapis.com/execution-environment: gen2
          run.googleapis.com/startup-cpu-boost: "false"
        name: basic-service-basic-v1
      spec:
        containerConcurrency: 80
        containers:
          - env:
              - name: ENV_VAR
                value: value
            image: gcr.io/project/image:v1.0.0
            ports:
              - containerPort: 3000
                name: http1
            resources:
              limits:
                cpu: "2"
                memory: 1Gi
            startupProbe:
              failureThreshold: 3
              initialDelaySeconds: 0
              periodSeconds: 10
              tcpSocket:
                port: 3000
              timeoutSeconds: 1
        timeoutSeconds: 300
should render with full configuration:
  1: |
    template:
      metadata:
        annotations:
          autoscaling.knative.dev/maxScale: "10"
          autoscaling.knative.dev/minScale: "1"
          run.googleapis.com/cpu-throttling: "true"
          run.googleapis.com/encryption-key: projects/my-project/locations/us-west1/keyRings/my-keyring/cryptoKeys/my-key
          run.googleapis.com/execution-environment: gen2
          run.googleapis.com/secrets: SECRET3:projects/other-project/secrets/other-secret
          run.googleapis.com/startup-cpu-boost: "true"
          run.googleapis.com/vpc-access-connector: projects/my-project/locations/us-central1/connectors/my-connector
          run.googleapis.com/vpc-access-egress: all-traffic
        name: full-service-full-v1
      spec:
        containerConcurrency: 50
        containers:
          - args:
              - -c
              - echo hello
            command:
              - /bin/sh
            env:
              - name: ENV_VAR1
                value: value1
              - name: ENV_VAR2
                value: value2
              - name: SECRET1
                valueFrom:
                  secretKeyRef:
                    key: latest
                    name: my-secret
              - name: SECRET2
                valueFrom:
                  secretKeyRef:
                    key: "1"
                    name: another-secret
              - name: SECRET3
                valueFrom:
                  secretKeyRef:
                    key: latest
                    name: SECRET3
            image: gcr.io/project/image:v1.0.0
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /health
                port: 8080
              initialDelaySeconds: 5
              periodSeconds: 10
              timeoutSeconds: 1
            name: main-container
            ports:
              - containerPort: 8080
                name: http1
            resources:
              limits:
                cpu: "4"
                memory: 2Gi
            startupProbe:
              failureThreshold: 3
              httpGet:
                path: /health
                port: 8080
              initialDelaySeconds: 5
              periodSeconds: 10
              timeoutSeconds: 1
            volumeMounts:
              - mountPath: /cache
                name: cache
                readOnly: false
              - mountPath: /etc/config
                name: config
                readOnly: false
              - mountPath: /data
                name: data
                readOnly: true
              - mountPath: /shared
                name: shared
                readOnly: false
        serviceAccountName: my-service-account
        timeoutSeconds: 60
        volumes:
          - emptyDir:
              medium: Memory
              sizeLimit: 512Mi
            name: cache
          - name: config
            secret:
              items:
                - key: latest
                  path: config.json
                - key: "2"
                  path: config.v2.json
              secretName: app-config
          - csi:
              driver: gcsfuse.run.googleapis.com
              volumeAttributes:
                bucketName: my-data-bucket
                mountOptions: dir-mode=0755,file-mode=0644,gid=1000,uid=1000
            name: data
          - name: shared
            nfs:
              path: /exports/data
              server: 10.0.0.1
should render with network configuration:
  1: |
    template:
      metadata:
        annotations:
          autoscaling.knative.dev/maxScale: "100"
          autoscaling.knative.dev/minScale: "0"
          run.googleapis.com/cpu-throttling: "true"
          run.googleapis.com/execution-environment: gen2
          run.googleapis.com/network-interfaces: '[{"network":"projects/my-project/global/networks/my-vpc","subnetwork":"projects/my-project/regions/us-central1/subnetworks/my-subnet","tags":[]}]'
          run.googleapis.com/startup-cpu-boost: "false"
          run.googleapis.com/vpc-access-egress: all-traffic
      spec:
        containerConcurrency: 80
        containers:
          - image: gcr.io/project/image@sha256:abc123
            ports:
              - containerPort: 8080
                name: http1
            resources:
              limits:
                cpu: "1"
                memory: 512Mi
            startupProbe:
              failureThreshold: 3
              initialDelaySeconds: 0
              periodSeconds: 10
              tcpSocket:
                port: 8080
              timeoutSeconds: 1
        timeoutSeconds: 300
